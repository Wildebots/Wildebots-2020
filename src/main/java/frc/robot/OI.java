// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
import edu.wpi.first.wpilibj.buttons.*;
import frc.robot.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton a1;
    public JoystickButton b1;
    public JoystickButton x1;
    public JoystickButton y1;
    public JoystickButton leftTrigger;
    public JoystickButton rightTrigger;
    public Joystick xbox1;

    public JoystickButton a2;
    public JoystickButton b2;
    public JoystickButton x2;
    public JoystickButton y2;
    public JoystickButton triggerL;
    public JoystickButton triggerR;
    public Joystick xbox2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        xbox1 = new Joystick(0);
        rightTrigger = new JoystickButton(xbox1, 6);
        rightTrigger.whenPressed(new ShiftGear(Value.kForward));
        leftTrigger = new JoystickButton(xbox1, 5);
        leftTrigger.whenPressed(new ShiftGear(Value.kReverse));

        y1 = new JoystickButton(xbox1, 4);
        y1.whenPressed(new MoveArm("Yellow"));
        x1 = new JoystickButton(xbox1, 3);
        x1.whenPressed(new MoveArm("Blue"));
        b1 = new JoystickButton(xbox1, 2);
        b1.whenPressed(new MoveArm("Red"));
        a1 = new JoystickButton(xbox1, 1);
        a1.whenPressed(new MoveArm("Green"));

        xbox2 = new Joystick(1);
        triggerR = new JoystickButton(xbox1, 6);
        triggerR.whileHeld(new LaunchBall(5));
        triggerL = new JoystickButton(xbox1, 5);
        triggerL.whileHeld(new LaunchBall(5));
     
        //defines the properties of the buttons
        a2 = new JoystickButton(xbox2, 1);
        b2 = new JoystickButton(xbox2, 2);
        x2 = new JoystickButton(xbox2, 3);
        y2 = new JoystickButton(xbox2, 4);

        //when a button is pressed the input button is returned in Launchball
        a2.whenPressed(new LaunchBall(1));
        b2.whenPressed(new LaunchBall(2));
        b2.whenPressed(new LaunchBall(3));
        y2.whenPressed(new LaunchBall(4));
        

        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("Arcade Drive", new ArcadeDrive());
        SmartDashboard.putData("Launch Ball", new LaunchBall());
        SmartDashboard.putData("Move Arm", new MoveArm());
        SmartDashboard.putData("Ball Intake", new BallIntake());
        SmartDashboard.putData("Shift Gear", new ShiftGear());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getXbox1() {
        return xbox1;
    }

    public Joystick getXbox2() {
        return xbox2;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

